// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`multi command app errors on unknown flag 1`] = `
Array [
  "
scripts

  My scripts package 

Synopsis

  $ scripts <command> <options> 

Commands

  lint   lint the project 
  test   test the project 

Global Options

  -v, --verbose    Log a bunch of stuff    
  -h, --help       Display the help output 
",
]
`;

exports[`multi command app errors on unknown flag 2`] = `
Array [
  "Found unknown flag: \\"--error\\"",
]
`;

exports[`multi command app errors on unknown flag for sub command 1`] = `
Array [
  "
lint

  lint the project 

Options

  --fix            Run the application in fix mode 
  -v, --verbose    Log a bunch of stuff            
  -h, --help       Display the help output         

Examples

  lint --fix 
",
]
`;

exports[`multi command app errors on unknown flag for sub command 2`] = `
Array [
  "Found unknown flag: \\"--error\\"",
]
`;

exports[`multi command app help 1`] = `
Array [
  "
scripts

  My scripts package 

Synopsis

  $ scripts <command> <options> 

Commands

  lint   lint the project 
  test   test the project 

Global Options

  -v, --verbose    Log a bunch of stuff    
  -h, --help       Display the help output 
",
]
`;

exports[`multi command app should handle curlies in descriptions 1`] = `
Array [
  "
scripts

  My scripts package 

Synopsis

  $ scripts <command> <options> 

Commands

  lint   lint the project 
  test   test the project 

Global Options

  -v, --verbose    Log a bunch of stuff    
  -h, --help       Display the help output 

Additional Info

  Only run this if you really need to ({ foo }) => { console.log(\\"\\") } 
",
]
`;

exports[`multi command app should handle curlies in descriptions 2`] = `
Array [
  "Found unknown command \\"flint\\", did you mean \\"lint\\"?",
]
`;

exports[`multi command app sub-command groups sub-multi-command help 1`] = `
Array [
  "
scripts

  My scripts package 

Synopsis

  $ scripts <command> <options> 

developer

  test   test the project 

design

  style-guide   create a styleguide for the project 

Global Options

  -h, --help    Display the help output 
",
]
`;

exports[`multi command app suggests misspelled command 1`] = `
Array [
  "
scripts

  My scripts package 

Synopsis

  $ scripts <command> <options> 

Commands

  lint   lint the project 
  test   test the project 

Global Options

  -v, --verbose    Log a bunch of stuff    
  -h, --help       Display the help output 
",
]
`;

exports[`multi command app suggests misspelled command 2`] = `
Array [
  "Found unknown command \\"flint\\", did you mean \\"lint\\"?",
]
`;

exports[`multi command app w/multi commands sub-multi-command help 1`] = `
Array [
  "
create

  create a new project 

Synopsis

  $ create <command> <options> 

Commands

  component   create a component 
  project     create a project   

Global Options

  --name string    The name of the thing to create 
  -v, --verbose    Log a bunch of stuff            
  -h, --help       Display the help output         
",
]
`;

exports[`multi command app w/multi commands sub-multi-command sub-command help 1`] = `
Array [
  "
project

  create a project 

Options

  --cwd            Use the current working directory 
  --name string    The name of the thing to create   
  -v, --verbose    Log a bunch of stuff              
  -h, --help       Display the help output           

Examples

  create project 
",
]
`;

exports[`renders logos 1`] = `
Array [
  "
FOOBAR

echo

  Print a string to the terminal 

Synopsis

  $ echo <command> <options> 

Commands

  lint   find common errors 

Global Options

  -h, --help    Display the help output 
",
]
`;

exports[`should display code 1`] = `
"
echo

  Print a string to the terminal 

Options

  -h, --help    Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 

  |                                                                             
                                                                                
  |         {                                                                   
  |           \\"create\\": {                                                       
  |             \\"package\\": {                                                    
  |               \\"templates\\": [                                                
  |                 {                                                           
  |                   \\"name\\": \\"custom-js\\",                                      
  |                   \\"url\\": \\"https://github.intuit.com/me/my-template\\",        
  |                   \\"description\\": \\"A custom package template\\",               
  |                   \\"sha\\": \\"4b9c7b627307380fb31acae059f7c095d0c626b8\\"         
  |                 }                                                           
  |               ]                                                             
  |             }                                                               
  |           }                                                                 
  |         }                                                                   
                                                                                
"
`;

exports[`single command app errors on unknown flag + known flags 1`] = `
Array [
  "Found unknown flag: \\"--error\\"",
]
`;

exports[`single command app errors on unknown flag 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --value string   The value to print      
  -h, --help       Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app errors on unknown flag 2`] = `
Array [
  "Found unknown flag: \\"--error\\"",
]
`;

exports[`single command app errors without multple required flags - or 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --b string                            
  -h, --help    Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app errors without multple required flags - or 2`] = `
Array [
  "Missing required arg: (--a or --b,c)",
]
`;

exports[`single command app errors without required flag - or 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --value string [required]   The value to print      
  -h, --help                  Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app errors without required flag - or 2`] = `
Array [
  "Missing required args: (--a or --b), --c",
]
`;

exports[`single command app errors without required flag 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --value string [required]   The value to print      
  -h, --help                  Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app errors without required flag 2`] = `
Array [
  "Missing required arg: --value",
]
`;

exports[`single command app errors without required flags - or 1`] = `undefined`;

exports[`single command app errors without required flags - or 2`] = `undefined`;

exports[`single command app help 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --value string   The value to print      
  -h, --help       Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app suggests typo correction 1`] = `
Array [
  "
echo

  Print a string to the terminal 

Options

  --value string   The value to print      
  -h, --help       Display the help output 

Examples

  echo foo               
  echo \\"Intense message\\" 
",
]
`;

exports[`single command app suggests typo correction 2`] = `
Array [
  "Found unknown flag \\"--vakue\\", did you mean \\"--value\\"?",
]
`;
